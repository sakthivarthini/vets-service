spring:
  application:
    name: vets-service
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888/}
  profiles:
    active: production

---
spring:
  config:
    activate:
      on-profile: docker
    import: configserver:http://config-server:8888
  datasource:
    url: jdbc:mysql://localhost:3306/vets_db
    username: user
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  cache:
    cache-names: vets
  data:
    jpa:
      repositories:
        enabled: true

---
spring:
  config:
    activate:
      on-profile: development
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  cache:
    cache-names: vets

---
spring:
  config:
    activate:
      on-profile: production
  datasource:
    url: jdbc:mysql://prod-db-server:3306/vets_db
    username: prod_user
    password: prod_password
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  cache:
    cache-names: vets

---
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
  file:
    name: application.log

server:
  port: 8080

spring:
  profiles:
    active: ${spring.profiles.active:production}

---
management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    enabled: true
  health:
    db:
      enabled: true
      show-details: always
